{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module      editor_marklar/editor\n * @copyright   2016 David Mudrak <david@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/yui',\n        'core/str',\n        'core/log',\n        'core/ajax',\n        'core/event',\n        'editor_marklar/filepicker',\n        'editor_marklar/imagepaster',\n], function($, Y, str, log, ajax, event, filepicker, ImagePaster) {\n\n    \"use strict\";\n\n    /**\n     * @constructor\n     * @param {Element} textarea\n     * @param {Object} initparams\n     */\n    function MarklarEditor(textarea, initparams) {\n\n        this.initparams = initparams;\n\n        if (typeof M.editor_marklar.fpoptions[initparams.elementid] !== \"undefined\") {\n            this.initparams.filepickeroptions = M.editor_marklar.fpoptions[initparams.elementid];\n        }\n\n        this.initTextArea(textarea);\n        this.initFormatSelector();\n        this.initPanel();\n        this.initFilesEmbedding();\n        this.initPreview();\n        this.initSyntaxHelp();\n        this.initImagePaster();\n    }\n\n    /**\n     * Initialize the text area element.\n     *\n     * @param {Element} textarea\n     */\n    MarklarEditor.prototype.initTextArea = function(textarea) {\n        var self = this;\n\n        self.textarea = textarea\n            .addClass('marklar-textarea')\n            .css('box-sizing', 'border-box')\n            .css('width', '100%')\n            .css('background-color', 'white')\n            .css('margin-bottom', '10px')\n            .css('padding', '7px');\n\n        if (self.initparams.monospace) {\n            self.textarea.css('font-family', 'monospace');\n        }\n    };\n\n    /**\n     * Initialize the text format selector.\n     */\n    MarklarEditor.prototype.initFormatSelector = function() {\n        var self = this;\n\n        // Expected name of the field with the text format.\n        var fname = self.textarea.attr('name').replace('[text]', '[format]');\n        var form = self.textarea.closest('form');\n\n        if (fname === self.textarea.attr('name')) {\n            // This may happen in places like mod_data or admin_setting_confightmleditor\n            // that keep their own naming rules for the format.\n            return;\n        }\n\n        // Locate the text format selector for our textarea.\n        self.formatSelector = form.find('select[name=\"' + fname + '\"]');\n\n        if (self.formatSelector.length) {\n            // Great, there is the drop down format selector found. We're done here.\n            return;\n\n        } else {\n            // There is no dropdown menu with the format. Try to find the hidden field holding the format value.\n            var formatHidden = form.find('input[name=\"' + fname + '\"]');\n            var formatId;\n            var formatName;\n\n            if (formatHidden.length) {\n                formatId = parseInt(formatHidden.attr('value'));\n            } else {\n                // No text format specified.\n                log.error('marklar: format field not found: ' + fname);\n                return;\n            }\n\n            switch (formatId) {\n                case 0:\n                    formatName = 'formattext';\n                    break;\n                case 1:\n                    formatName = 'formathtml';\n                    break;\n                case 2:\n                    formatName = 'formatplain';\n                    break;\n                case 4:\n                    formatName = 'formatmarkdown';\n                    break;\n                default:\n                    log.error('marklar: unknown text format ' + formatId);\n                    self.formatSelector = null;\n                    return;\n            }\n\n            // Convert the hidden field into a single item selector.\n            self.formatSelector = $('<select class=\"custom-select\" name=\"' + fname + '\"></select>')\n                .append($('<option value=\"' + formatId + '\">' + formatName + '</option>'));\n            formatHidden.remove();\n\n            // Localize the format name.\n            str.get_string(formatName, 'core_moodle').done(function(formatTitle) {\n                self.formatSelector.find('option[value=\"' + formatId + '\"]').text(formatTitle);\n            }).fail(function(ex) {\n                log.error(ex);\n                return;\n            });\n        }\n    };\n\n    /**\n     * Initialize the bottom panel.\n     */\n    MarklarEditor.prototype.initPanel = function() {\n        var self = this;\n\n        // Wrap the textarea.\n        self.textarea.wrap('<div class=\"marklar-wrapper\"></div>');\n\n        // Insert the panel region right after the textarea.\n        self.panel = $('<div class=\"marklar-panel\"></div>').insertAfter(self.textarea);\n\n        // Create a subpanel within the panel with widgets that should be visible in editing mode only.\n        self.editpanel = $('<div class=\"marklar-edit-panel\"></div>').appendTo(self.panel);\n\n        // Move the format selector to the panel.\n        if (self.formatSelector) {\n            self.editpanel.append(self.formatSelector);\n            self.formatSelector.attr('data-marklar-widget', 'format-select');\n        }\n\n        // Create buttons placeholders in the panel so that the order or async initialization does not affect display order.\n        self.panel.prepend('<span data-marklar-placeholder=\"preview\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"syntax\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"insert-image\" />');\n        self.editpanel.append('<span data-marklar-placeholder=\"insert-file\" />');\n    };\n\n    /**\n     * Initialize support for embedding images via file picker.\n     *\n     * @method initFilesEmbedding\n     */\n    MarklarEditor.prototype.initFilesEmbedding = function() {\n\n        if (!(\"filepickeroptions\" in this.initparams)) {\n            log.error(this.initparams.elementid + \": File picker options not found\");\n            return;\n        }\n\n        var self = this;\n\n        Y.use('core_filepicker', function() {\n            self.filepicker = filepicker.init(self.initparams.filepickeroptions);\n            if (self.filepicker.canShowFilepicker(\"image\")) {\n                str.get_string(\"insertimage\", \"editor_marklar\").done(function(strinsertimage) {\n                    var button = $('<button class=\"btn btn-default\" data-marklar-widget=\"insert-image\" />');\n                    button.text(strinsertimage);\n                    button.click(function(e) {\n                        e.preventDefault();\n                        self.filepicker.showFilepicker(\"image\", function(data) {\n                            self.imageEmbedded(data);\n                        });\n                    });\n                    self.panel.find('[data-marklar-placeholder=\"insert-image\"]').replaceWith(button);\n                    self.insertImageButton = button;\n                });\n            }\n            if (self.filepicker.canShowFilepicker(\"link\")) {\n                str.get_string(\"insertlink\", \"editor_marklar\").done(function(strinsertlink) {\n                    var button = $('<button class=\"btn btn-default\" data-marklar-widget=\"insert-file\" />');\n                    button.text(strinsertlink);\n                    button.click(function(e) {\n                        e.preventDefault();\n                        self.filepicker.showFilepicker(\"link\", function(data) {\n                            self.insertLink(data);\n                        });\n                    });\n                    self.panel.find('[data-marklar-placeholder=\"insert-file\"]').replaceWith(button);\n                    self.insertFileButton = button;\n                });\n            }\n        });\n    };\n\n    /**\n     * Initialize the context preview support.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.initPreview = function() {\n        var self = this;\n\n        // Check there is the format selector available.\n        if (!self.formatSelector) {\n            return false;\n        }\n\n        self.previewBody = $('<div class=\"marklar-preview\" />')\n            .hide();\n        self.panel.before(self.previewBody);\n        return str.get_strings([\n                {key: 'previewon', component: 'editor_marklar'},\n                {key: 'previewoff', component: 'editor_marklar'}\n        ]).then(function(strings) {\n            self.previewButtonOn = $('<button class=\"btn btn-default\" data-marklar-widget=\"preview-on\" />')\n                .text(strings[0])\n                .on('click', self.previewOn.bind(self));\n            self.previewButtonOff = $('<button class=\"btn btn-default\" data-marklar-widget=\"preview-off\" >')\n                .text(strings[1])\n                .on('click', self.previewOff.bind(self))\n                .hide();\n            var buttonPreview = $('<div class=\"marklar-preview-controls\" />')\n                .append(self.previewButtonOn)\n                .append(self.previewButtonOff);\n            self.panel.find('[data-marklar-placeholder=\"preview\"]').replaceWith(buttonPreview);\n            return true;\n        });\n    };\n\n    /**\n     * Toggle preview mode on.\n     *\n     * @param {Event} e\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.previewOn = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        return str.get_string('previewloading', 'editor_marklar').then(function(strpreviewloading) {\n            self.previewButtonOn.hide();\n            self.previewButtonOff.show();\n            self.editpanel.hide();\n\n            self.previewBody.html('<div class=\"marklar-preview-loading\">' + strpreviewloading + '</div>');\n            self.previewBody.height(self.textarea.height());\n\n            self.textarea.hide();\n            self.previewBody.show();\n            self.previewLoad();\n\n            return true;\n        });\n    };\n\n    /**\n     * Toggle preview mode off.\n     *\n     * @param {Event} e\n     */\n    MarklarEditor.prototype.previewOff = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        self.previewButtonOff.hide();\n        self.previewButtonOn.show();\n        self.editpanel.show();\n\n        self.previewBody.hide();\n        self.previewBody.html('');\n        self.textarea.show();\n    };\n\n    /**\n     * Load and display the text preview.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.previewLoad = function() {\n        var self = this;\n        var args = {\n            text: self.textarea.val(),\n            format: self.formatSelector.val(),\n            contextid: self.initparams.contextid\n        };\n\n        return ajax.call([{\n            methodname: 'editor_marklar_get_preview',\n            args: args\n        }])[0].fail(function(err) {\n            self.previewBody.html('<div class=\"alert alert-error\"><b>Error:</b> ' + err.message + '</div>');\n            log.error(err);\n            return false;\n\n        }).then(function(response) {\n            self.previewBody.html(response.html);\n            event.notifyFilterContentUpdated(self.previewBody);\n            return true;\n        });\n    };\n\n    /**\n     * This is called once the use picks an image via filepicker.\n     *\n     * @param {Object} data\n     */\n    MarklarEditor.prototype.imageEmbedded = function(data) {\n        if (\"url\" in data) {\n            this.insertText(\"<img alt=\\\"\\\" class=\\\"img-responsive\\\" src=\\\"\" + data.url + \"\\\"/>\");\n        }\n    };\n\n    /**\n     * This is called once the user picks a file via filepicker.\n     *\n     * @param {Object} data\n     */\n    MarklarEditor.prototype.insertLink = function(data) {\n        if (\"url\" in data) {\n            var texttoshow;\n            if (\"file\" in data && data.file) {\n                texttoshow = data.file.replace(/(\\[|\\])/g, \"_\");\n            } else {\n                texttoshow = \"texttoshow\";\n            }\n            this.insertText(\"[\" + texttoshow + \"](\" + data.url + \")\");\n        }\n    };\n\n    /**\n     * Inserts the given text into the editor.\n     *\n     * @param {String} inserttext\n     */\n    MarklarEditor.prototype.insertText = function(inserttext) {\n        var areatext = this.textarea.val();\n        var selectionStart = this.textarea.prop('selectionStart');\n        var selectionEnd = this.textarea.prop('selectionEnd');\n        this.textarea.val(areatext.substring(0, selectionStart) + inserttext + areatext.substring(selectionEnd));\n    };\n\n    /**\n     * Initialize the syntax help panel.\n     *\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.initSyntaxHelp = function() {\n        var self = this;\n\n        // Check there is the format selector available.\n        if (!self.formatSelector) {\n            return false;\n        }\n\n        self.syntaxBody = $('<div class=\"marklar-syntax-help\" />')\n            .hide();\n        self.editpanel.append(self.syntaxBody);\n        str.get_strings([\n                {key: 'syntaxon', component: 'editor_marklar'},\n                {key: 'syntaxoff', component: 'editor_marklar'},\n        ]).then(function(strings) {\n            self.syntaxButtonOn = $('<button class=\"btn btn-link\" data-marklar-widget=\"syntax-on\" />')\n                .text(strings[0])\n                .on('click', self.syntaxOn.bind(self));\n            self.syntaxButtonOff = $('<button class=\"btn btn-link\" data-marklar-widget=\"syntax-off\" />')\n                .text(strings[1])\n                .on('click', self.syntaxOff.bind(self))\n                .hide();\n            var buttonSyntax = $('<div class=\"marklar-syntax-controls\" />')\n                .append(self.syntaxButtonOn)\n                .append(self.syntaxButtonOff);\n            self.panel.find('[data-marklar-placeholder=\"syntax\"]').replaceWith(buttonSyntax);\n            return true;\n        }).catch(function(err) {\n            log.error(err);\n            return false;\n        });\n\n        // If the syntax help is expanded and the format is changed, update the\n        // syntax help to describe the new format.\n        if (self.formatSelector) {\n            self.formatSelector.on('change', function() {\n                if (self.syntaxBody.is(':visible')) {\n                    self.syntaxButtonOn.click();\n                }\n            });\n        }\n\n        return true;\n    };\n\n    /**\n     * Initialize the image paster module.\n     */\n    MarklarEditor.prototype.initImagePaster = function() {\n        var self = this;\n\n        if (!self.initparams.filepickeroptions.image) {\n            return;\n        }\n\n        ImagePaster.init(self.textarea, self.initparams.filepickeroptions.image, self.imageEmbedded.bind(this));\n    };\n\n    /**\n     * Toggle syntax help on.\n     *\n     * @param {Event} e\n     * @return {boolean}\n     */\n    MarklarEditor.prototype.syntaxOn = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        return str.get_string('syntaxloading', 'editor_marklar').then(function(strsyntaxloading) {\n            self.syntaxButtonOn.hide();\n            self.syntaxButtonOff.show();\n            self.syntaxBody.html('<div class=\"marklar-syntax-loading\">' + strsyntaxloading + '</div>');\n            self.syntaxBody.show();\n            self.syntaxLoad();\n            return true;\n        });\n    };\n\n    /**\n     * Toggle syntax help off.\n     *\n     * @param {Event} e\n     */\n    MarklarEditor.prototype.syntaxOff = function(e) {\n        var self = this;\n        e.preventDefault();\n\n        self.syntaxButtonOff.hide();\n        self.syntaxButtonOn.show();\n        self.syntaxBody.hide();\n        self.syntaxBody.html('');\n    };\n\n    /**\n     * Load and display the text syntax.\n     *\n     * @return {Deferred}\n     */\n    MarklarEditor.prototype.syntaxLoad = function() {\n        var self = this;\n\n        return str.get_string('syntax-format' + self.formatSelector.val(), 'editor_marklar').then(function(strsyntax) {\n            self.syntaxBody.html(strsyntax);\n            return;\n        });\n    };\n\n    return /** @alias module:editor_marklar */ {\n        init: function(params) {\n            var textarea;\n\n            if (\"elementid\" in params) {\n                textarea = $(document.getElementById(params.elementid));\n            } else {\n                throw new Error(\"editor_marklar: Invalid editor init parameter - missing elementid\");\n            }\n\n            if (textarea.length) {\n                return new MarklarEditor(textarea, params);\n            } else {\n                throw new Error(\"Unable to find textarea element\", params.elementid);\n            }\n        }\n    };\n});\n"],"names":["define","$","Y","str","log","ajax","event","filepicker","ImagePaster","MarklarEditor","textarea","initparams","this","M","editor_marklar","fpoptions","elementid","filepickeroptions","initTextArea","initFormatSelector","initPanel","initFilesEmbedding","initPreview","initSyntaxHelp","initImagePaster","prototype","addClass","css","monospace","self","fname","attr","replace","form","closest","formatSelector","find","length","formatId","formatName","formatHidden","parseInt","error","append","remove","get_string","done","formatTitle","text","fail","ex","wrap","panel","insertAfter","editpanel","appendTo","prepend","use","init","canShowFilepicker","strinsertimage","button","click","e","preventDefault","showFilepicker","data","imageEmbedded","replaceWith","insertImageButton","strinsertlink","insertLink","insertFileButton","previewBody","hide","before","get_strings","key","component","then","strings","previewButtonOn","on","previewOn","bind","previewButtonOff","previewOff","buttonPreview","strpreviewloading","show","html","height","previewLoad","args","val","format","contextid","call","methodname","err","message","response","notifyFilterContentUpdated","insertText","url","texttoshow","file","inserttext","areatext","selectionStart","prop","selectionEnd","substring","syntaxBody","syntaxButtonOn","syntaxOn","syntaxButtonOff","syntaxOff","buttonSyntax","catch","is","image","strsyntaxloading","syntaxLoad","strsyntax","params","Error","document","getElementById"],"mappings":"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"}